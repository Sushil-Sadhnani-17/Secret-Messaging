
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dell
 */
public class Decode extends javax.swing.JFrame {

    /**
     * Creates new form DecodeRemaining
     */
    public Decode() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Decode");
        setLocation(new java.awt.Point(380, 170));
        setMinimumSize(new java.awt.Dimension(606, 429));
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 20)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 26, 600, 220);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Lucida Calligraphy", 1, 20)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 281, 618, 34);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Lucida Calligraphy", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Current Form Of Secret Message.");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(108, 0, 384, 28);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Lucida Calligraphy", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Codes Remaining On Secret Message");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(90, 255, 421, 28);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Decode2.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(188, 312, 224, 89);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Result.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jButton2PropertyChange(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(229, 312, 142, 89);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Decode.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 600, 400);

        pack();
    }// </editor-fold>//GEN-END:initComponents
String message="",s="";
int a=0,length;
long code=0;
int n,m;
public static String pin;
    private void jButton2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jButton2PropertyChange
jButton2.setVisible(false);
    }//GEN-LAST:event_jButton2PropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
Timer timer=new Timer();
timer.scheduleAtFixedRate(new TimerTask() {
    @Override
    public void run() {
        if(jTextArea2.getText().equals(""))
        {timer.cancel();}
        else
        {
        message=jTextArea1.getText();
        code=Long.parseLong(jTextArea2.getText());
        length=message.length();
        switch(Integer.parseInt(code%10+""))
        {
            case 1:
            {
    while(a<length)
    {
    char z=message.charAt(a);

    switch(z)
    {
    case 'a':
    s=s+"z";
    break;
    
    case 'b':
    s=s+"y";
    break;
    
    case 'c':
    s=s+"x";
    break;
    
    case 'd':
    s=s+"w";
    break;
    
    case 'e':
    s=s+"v";
    break;
    
    case 'f':
    s=s+"u";
    break;
    
    case 'g':
    s=s+"t";
    break;
    
    case 'h':
    s=s+"s";
    break;
    
    case 'i':
    s=s+"r";
    break;
    
    case 'j':
    s=s+"q";
    break;
    
    case 'k':
    s=s+"p";
    break;
    
    case 'l':
    s=s+"o";
    break;
    
    case 'm':
    s=s+"n";
    break;
    
    case 'n':
    s=s+"m";
    break;
    
    case 'o':
    s=s+"l";
    break;
    
    case 'p':
    s=s+"k";
    break;
    
    case 'q':
    s=s+"j";
    break;
    
    case 'r':
    s=s+"i";
    break;
    
    case 's':
    s=s+"h";
    break;
    
    case 't':
    s=s+"g";
    break;
    
    case 'u':
    s=s+"f";
    break;
    
    case 'v':
    s=s+"e";
    break;
    
    case 'w':
    s=s+"d";
    break;
    
    case 'x':
    s=s+"c";
    break;
    
    case 'y':
    s=s+"b";
    break;
    
    case 'z':
    s=s+"a";
    break;
    
    case 'A':
    s=s+"Z";
    break;
    
    case 'B':
    s=s+"Y";
    break;
    
    case 'C':
    s=s+"X";
    break;
    
    case 'D':
    s=s+"W";
    break;
    
    case 'E':
    s=s+"V";
    break;
    
    case 'F':
    s=s+"U";
    break;
    
    case 'G':
    s=s+"T";
    break;
    
    case 'H':
    s=s+"S";
    break;
    
    case 'I':
    s=s+"R";
    break;
    
    case 'J':
    s=s+"Q";
    break;
    
    case 'K':
    s=s+"P";
    break;
    
    case 'L':
    s=s+"O";
    break;
    
    case 'M':
    s=s+"N";
    break;
    
    case 'N':
    s=s+"M";
    break;
    
    case 'O':
    s=s+"L";
    break;
    
    case 'P':
    s=s+"K";
    break;
    
    case 'Q':
    s=s+"J";
    break;
    
    case 'R':
    s=s+"I";
    break;
    
    case 'S':
    s=s+"H";
    break;
    
    case 'T':
    s=s+"G";
    break;
    
    case 'U':
    s=s+"F";
    break;
    
    case 'V':
    s=s+"E";
    break;
    
    case 'W':
    s=s+"D";
    break;
    
    case 'X':
    s=s+"C";
    break;
    
    case 'Y':
    s=s+"B";
    break;
    
    case 'Z':
    s=s+"A";
    break;
    
    case '0':
    s=s+"9";
    break;
    
    case '1':
    s=s+"8";
    break;
    
    case '2':
    s=s+"7";
    break;
    
    case '3':
    s=s+"6";
    break;
    
    case '4':
    s=s+"5";
    break;
    
    case '5':
    s=s+"4";
    break;
    
    case '6':
    s=s+"3";
    break;
    
    case '7':
    s=s+"2";
    break;
    
    case '8':
    s=s+"1";
    break;
    
    case '9':
    s=s+"0";
    break;
    
    default:
    s=s+z;
    }
    a++;
    }
    jTextArea1.setText(s);
            }
            
            case 2:
            {
    while(a<length)
    {
    char z=message.charAt(a);

    switch(z)
    {
    case 'q':
    s=s+"a";
    break;
    
    case 'w':
    s=s+"b";
    break;
    
    case 'e':
    s=s+"c";
    break;
    
    case 'r':
    s=s+"d";
    break;
    
    case 't':
    s=s+"e";
    break;
    
    case 'y':
    s=s+"f";
    break;
    
    case 'u':
    s=s+"g";
    break;
    
    case 'i':
    s=s+"h";
    break;
    
    case 'o':
    s=s+"i";
    break;
    
    case 'p':
    s=s+"j";
    break;
    
    case 'a':
    s=s+"k";
    break;
    
    case 's':
    s=s+"l";
    break;
    
    case 'd':
    s=s+"m";
    break;
    
    case 'f':
    s=s+"n";
    break;
    
    case 'g':
    s=s+"o";
    break;
    
    case 'h':
    s=s+"p";
    break;
    
    case 'j':
    s=s+"q";
    break;
    
    case 'k':
    s=s+"r";
    break; 
    
    case 'l':
    s=s+"s";
    break;
    
    case 'z':
    s=s+"t";
    break;
    
    case 'x':
    s=s+"u";
    break;
    
    case 'c':
    s=s+"v";
    break;
    
    case 'v':
    s=s+"w";
    break;
    
    case 'b':
    s=s+"x";
    break;
    
    case 'n':
    s=s+"y";
    break;
    
    case 'm':
    s=s+"z";
    break;
    
    case 'Q':
    s=s+"A";
    break;
    
    case 'W':
    s=s+"B";
    break;
    
    case 'E':
    s=s+"C";
    break;
    
    case 'R':
    s=s+"D";
    break;
    
    case 'T':
    s=s+"E";
    break;
    
    case 'Y':
    s=s+"F";
    break;
    
    case 'U':
    s=s+"G";
    break;
    
    case 'I':
    s=s+"H";
    break;
    
    case 'O':
    s=s+"I";
    break;
    
    case 'P':
    s=s+"J";
    break;
    
    case 'A':
    s=s+"K";
    break;
    
    case 'S':
    s=s+"L";
    break;
    
    case 'D':
    s=s+"M";
    break;
    
    case 'F':
    s=s+"N";
    break;
    
    case 'G':
    s=s+"O";
    break;
    
    case 'H':
    s=s+"P";
    break;
    
    case 'J':
    s=s+"Q";
    break;
    
    case 'K':
    s=s+"R";
    break;
    
    case 'L':
    s=s+"S";
    break;
    
    case 'Z':
    s=s+"T";
    break;
    
    case 'X':
    s=s+"U";
    break;
    
    case 'C':
    s=s+"V";
    break;
    
    case 'V':
    s=s+"W";
    break;
    
    case 'B':
    s=s+"X";
    break;
    
    case 'N':
    s=s+"Y";
    break;
    
    case 'M':
    s=s+"Z";
    break;
    
    case '7':
    s=s+"1";
    break;
    
    case '4':
    s=s+"2";
    break;
    
    case '1':
    s=s+"3";
    break;
    
    case '0':
    s=s+"4";
    break;
    
    case '8':
    s=s+"5";
    break;
    
    case '5':
    s=s+"6";
    break;
    
    case '2':
    s=s+"7";
    break;
    
    case '9':
    s=s+"8";
    break;
    
    case '6':
    s=s+"9";
    break;
    
    case '3':
    s=s+"0";
    break;
    
    default:
    s=s+z;
    }
    a++;
    }
    jTextArea1.setText(s);
            }
            
            case 3:
            {
    n=27;
    m=27;
    
    while(a<length)
    {
    char z=message.charAt(a);
    
    switch(z)
    {
    case 'a':
    n=0-a;
    break;
    
    case 'b':
    n=1-a;
    break;
    
    case 'c':
    n=2-a;
    break;
    
    case 'd':
    n=3-a;
    break;
    
    case 'e':
    n=4-a;
    break;
    
    case 'f':
    n=5-a;
    break;
    
    case 'g':
    n=6-a;
    break;
    
    case 'h':
    n=7-a;
    break;
    
    case 'i':
    n=8-a;
    break;
    
    case 'j':
    n=9-a;
    break;
    
    case 'k':
    n=10-a;
    break;
    
    case 'l':
    n=11-a;
    break;
    
    case 'm':
    n=12-a;
    break;
    
    case 'n':
    n=13-a;
    break;
    
    case 'o':
    n=14-a;
    break;
    
    case 'p':
    n=15-a;
    break;
    
    case 'q':
    n=16-a;
    break;
    
    case 'r':
    n=17-a;
    break;
    
    case 's':
    n=18-a;
    break;
    
    case 't':
    n=19-a;
    break;
    
    case 'u':
    n=20-a;
    break;
    
    case 'v':
    n=21-a;
    break;
    
    case 'w':
    n=22-a;
    break;
    
    case 'x':
    n=23-a;
    break;
    
    case 'y':
    n=24-a;
    break;
    
    case 'z':
    n=25-a;
    break;
    
    case 'A':
    m=0-a;
    break;
    
    case 'B':
    m=1-a;
    break;
    
    case 'C':
    m=2-a;
    break;
    
    case 'D':
    m=3-a;
    break;
    
    case 'E':
    m=4-a;
    break;
    
    case 'F':
    m=5-a;
    break;
    
    case 'G':
    m=6-a;
    break;
    
    case 'H':
    m=7-a;
    break;
    
    case 'I':
    m=8-a;
    break;
    
    case 'J':
    m=9-a;
    break;
    
    case 'K':
    m=10-a;
    break;
    
    case 'L':
    m=11-a;
    break;
    
    case 'M':
    m=12-a;
    break;
    
    case 'N':
    m=13-a;
    break;
    
    case 'O':
    m=14-a;
    break;
    
    case 'P':
    m=15-a;
    break;
    
    case 'Q':
    m=16-a;
    break;
    
    case 'R':
    m=17-a;
    break;
    
    case 'S':
    m=18-a;
    break;
    
    case 'T':
    m=19-a;
    break;
    
    case 'U':
    m=20-a;
    break;
    
    case 'V':
    m=21-a;
    break;
    
    case 'W':
    m=22-a;
    break;
    
    case 'X':
    m=23-a;
    break;
    
    case 'Y':
    m=24-a;
    break;
    
    case 'Z':
    m=25-a;
    break;
    
    case '1':
    s=s+"0";
    break;
    
    case '8':
    s=s+"1";
    break;
    
    case '5':
    s=s+"2";
    break;
    
    case '2':
    s=s+"3";
    break;
    
    case '9':
    s=s+"4";
    break;
    
    case '6':
    s=s+"5";
    break;
    
    case '7':
    s=s+"6";
    break;
    
    case '3':
    s=s+"7";
    break;
    
    case '4':
    s=s+"8";
    break;
    
    case '0':
    s=s+"9";
    break;
    
    default:
    s=s+z;
    }

    while(n<1)
    {n=n+26;}
    
    while(m<1)
    {m=m+26;}
    
    switch (n)
    {
    case 1:
    s=s+"a";
    break;
    
    case 2:
    s=s+"b";
    break;
    
    case 3:
    s=s+"c";
    break;
    
    case 4:
    s=s+"d";
    break;
    
    case 5:
    s=s+"e";
    break;
    
    case 6:
    s=s+"f";
    break;
    
    case 7:
    s=s+"g";
    break;
    
    case 8:
    s=s+"h";
    break;
    
    case 9:
    s=s+"i";
    break;
    
    case 10:
    s=s+"j";
    break;
    
    case 11:
    s=s+"k";
    break;
    
    case 12:
    s=s+"l";
    break;
    
    case 13:
    s=s+"m";
    break;
    
    case 14:
    s=s+"n";
    break;
    
    case 15:
    s=s+"o";
    break;
    
    case 16:
    s=s+"p";
    break;
    
    case 17:
    s=s+"q";
    break;
    
    case 18:
    s=s+"r";
    break;
    
    case 19:
    s=s+"s";
    break;
    
    case 20:
    s=s+"t";
    break;
    
    case 21:
    s=s+"u";
    break;
    
    case 22:
    s=s+"v";
    break;
    
    case 23:
    s=s+"w";
    break;
    
    case 24:
    s=s+"x";
    break;
    
    case 25:
    s=s+"y";
    break;
    
    case 26:
    s=s+"z";
    break;
    }
    
    switch (m)
    {
    case 1:
    s=s+"A";
    break;
    
    case 2:
    s=s+"B";
    break;
    
    case 3:
    s=s+"C";
    break;
    
    case 4:
    s=s+"D";
    break;
    
    case 5:
    s=s+"E";
    break;
    
    case 6:
    s=s+"F";
    break;
    
    case 7:
    s=s+"G";
    break;
    
    case 8:
    s=s+"H";
    break;
    
    case 9:
    s=s+"I";
    break;
    
    case 10:
    s=s+"J";
    break;
    
    case 11:
    s=s+"K";
    break;
    
    case 12:
    s=s+"L";
    break;
    
    case 13:
    s=s+"M";
    break;
    
    case 14:
    s=s+"N";
    break;
    
    case 15:
    s=s+"O";
    break;
    
    case 16:
    s=s+"P";
    break;
    
    case 17:
    s=s+"Q";
    break;
    
    case 18:
    s=s+"R";
    break;
    
    case 19:
    s=s+"S";
    break;
    
    case 20:
    s=s+"T";
    break;
    
    case 21:
    s=s+"U";
    break;
    
    case 22:
    s=s+"V";
    break;
    
    case 23:
    s=s+"W";
    break;
    
    case 24:
    s=s+"X";
    break;
    
    case 25:
    s=s+"Y";
    break;
    
    case 26:
    s=s+"Z";
    break;
    }
    n=27;
    m=27;
    
    a++;
    }
    jTextArea1.setText(s);
            }
            
            case 4:
            {
    n=0;
    m=0;
       
    while(a<length)
    {
    char z=message.charAt(a);

    switch(z)
    {
    case 'a':
    n=2+a;
    break;
    
    case 'b':
    n=3+a;
    break;
    
    case 'c':
    n=4+a;
    break;
    
    case 'd':
    n=5+a;
    break;
    
    case 'e':
    n=6+a;
    break;
    
    case 'f':
    n=7+a;
    break;
    
    case 'g':
    n=8+a;
    break;
    
    case 'h':
    n=9+a;
    break;
    
    case 'i':
    n=10+a;
    break;
    
    case 'j':
    n=11+a;
    break;
    
    case 'k':
    n=12+a;
    break;
    
    case 'l':
    n=13+a;
    break;
    
    case 'm':
    n=14+a;
    break;
    
    case 'n':
    n=15+a;
    break;
    
    case 'o':
    n=16+a;
    break;
    
    case 'p':
    n=17+a;
    break;
    
    case 'q':
    n=18+a;
    break;
    
    case 'r':
    n=19+a;
    break;
    
    case 's':
    n=20+a;
    break;
    
    case 't':
    n=21+a;
    break;
    
    case 'u':
    n=22+a;
    break;
    
    case 'v':
    n=23+a;
    break;
    
    case 'w':
    n=24+a;
    break;
    
    case 'x':
    n=25+a;
    break;
    
    case 'y':
    n=26+a;
    break;
    
    case 'z':
    n=27+a;
    break;
    
    case 'A':
    m=2+a;
    break;
    
    case 'B':
    m=3+a;
    break;
    
    case 'C':
    m=4+a;
    break;
    
    case 'D':
    m=5+a;
    break;
    
    case 'E':
    m=6+a;
    break;
    
    case 'F':
    m=7+a;
    break;
    
    case 'G':
    m=8+a;
    break;
    
    case 'H':
    m=9+a;
    break;
    
    case 'I':
    m=10+a;
    break;
    
    case 'J':
    m=11+a;
    break;
    
    case 'K':
    m=12+a;
    break;
    
    case 'L':
    m=13+a;
    break;
    
    case 'M':
    m=14+a;
    break;
    
    case 'N':
    m=15+a;
    break;
    
    case 'O':
    m=16+a;
    break;
    
    case 'P':
    m=17+a;
    break;
    
    case 'Q':
    m=18+a;
    break;
    
    case 'R':
    m=19+a;
    break;
    
    case 'S':
    m=20+a;
    break;
    
    case 'T':
    m=21+a;
    break;
    
    case 'U':
    m=22+a;
    break;
    
    case 'V':
    m=23+a;
    break;
    
    case 'W':
    m=24+a;
    break;
    
    case 'X':
    m=25+a;
    break;
    
    case 'Y':
    m=26+a;
    break;
    
    case 'Z':
    m=27+a;
    break;
    
    case '8':
    s=s+"0";
    break;
    
    case '0':
    s=s+"1";
    break;

    case '5':
    s=s+"2";
    break;

    case '1':
    s=s+"3";
    break;
    
    case '7':
    s=s+"4";
    break;
    
    case '6':
    s=s+"5";
    break;

    case '3':
    s=s+"6";
    break;
    
    case '9':
    s=s+"7";
    break;
    
    case '4':
    s=s+"8";
    break;
    
    case '2':
    s=s+"9";
    break;
    
    default:
    s=s+z;
    }

    while(n>26)
    {n=n-26;}

    while(m>26)
    {m=m-26;}

    switch (n)
    { 
    case 1:
    s=s+"a";
    break;
    
    case 2:
    s=s+"b";
    break;
    
    case 3:
    s=s+"c";
    break;
    
    case 4:
    s=s+"d";
    break;
    
    case 5:
    s=s+"e";
    break;
    
    case 6:
    s=s+"f";
    break;
    
    case 7:
    s=s+"g";
    break;
    
    case 8:
    s=s+"h";
    break;
    
    case 9:
    s=s+"i";
    break;
    
    case 10:
    s=s+"j";
    break;
    
    case 11:
    s=s+"k";
    break;
    
    case 12:
    s=s+"l";
    break;
    
    case 13:
    s=s+"m";
    break;
    
    case 14:
    s=s+"n";
    break;
    
    case 15:
    s=s+"o";
    break;
    
    case 16:
    s=s+"p";
    break;
    
    case 17:
    s=s+"q";
    break;
    
    case 18:
    s=s+"r";
    break;
    
    case 19:
    s=s+"s";
    break;
    
    case 20:
    s=s+"t";
    break;
    
    case 21:
    s=s+"u";
    break;
    
    case 22:
    s=s+"v";
    break;
    
    case 23:
    s=s+"w";
    break;
    
    case 24:
    s=s+"x";
    break;
    
    case 25:
    s=s+"y";
    break;
    
    case 26:
    s=s+"z";
    break;
    }

    switch (m)
    {
    case 1:
    s=s+"A";
    break;
    
    case 2:
    s=s+"B";
    break;
    
    case 3:
    s=s+"C";
    break;
    
    case 4:
    s=s+"D";
    break;
    
    case 5:
    s=s+"E";
    break;
    
    case 6:
    s=s+"F";
    break;
    
    case 7:
    s=s+"G";
    break;
    
    case 8:
    s=s+"H";
    break;
    
    case 9:
    s=s+"I";
    break;
    
    case 10:
    s=s+"J";
    break;
    
    case 11:
    s=s+"K";
    break;
    
    case 12:
    s=s+"L";
    break;
    
    case 13:
    s=s+"M";
    break;
    
    case 14:
    s=s+"N";
    break;
    
    case 15:
    s=s+"O";
    break;
    
    case 16:
    s=s+"P";
    break;
    
    case 17:
    s=s+"Q";
    break;
    
    case 18:
    s=s+"R";
    break;
    
    case 19:
    s=s+"S";
    break;
    
    case 20:
    s=s+"T";
    break;
    
    case 21:
    s=s+"U";
    break;
    
    case 22:
    s=s+"V";
    break;
    
    case 23:
    s=s+"W";
    break;
    
    case 24:
    s=s+"X";
    break;
    
    case 25:
    s=s+"Y";
    break;
    
    case 26:
    s=s+"Z";
    break;
    }
    n=0;
    m=0;
    
    a++;
    }
    jTextArea1.setText(s);
            }
            
            case 5:
            {
    while(a<length)
    {
    char z=message.charAt(a);

    switch(z)
    {
    case 't':
    s=s+"a";
    break;
    
    case 'h':
    s=s+"b";
    break;
    
    case 'e':
    s=s+"c";
    break;
    
    case 'q':
    s=s+"d";
    break;
    
    case 'u':
    s=s+"e";
    break;
    
    case 'i':
    s=s+"f";
    break;
    
    case 'c':
    s=s+"g";
    break;
    
    case 'k':
    s=s+"h";
    break;
    
    case 'b':
    s=s+"i";
    break;
    
    case 'r':
    s=s+"j";
    break;
    
    case 'o':
    s=s+"k";
    break;
    
    case 'w':
    s=s+"l";
    break;
    
    case 'n':
    s=s+"m";
    break;
    
    case 'f':
    s=s+"n";
    break;
    
    case 'x':
    s=s+"o";
    break;
    
    case 'j':
    s=s+"p";
    break;
    
    case 'm':
    s=s+"q";
    break;
    
    case 'p':
    s=s+"r";
    break;
    
    case 's':
    s=s+"s";
    break;
    
    case 'v':
    s=s+"t";
    break;
    
    case 'l':
    s=s+"u";
    break;
    
    case 'a':
    s=s+"v";
    break;
    
    case 'z':
    s=s+"w";
    break;
    
    case 'y':
    s=s+"x";
    break;
    
    case 'd':
    s=s+"y";
    break;
    
    case 'g':
    s=s+"z";
    break;
    
    case 'T':
    s=s+"A";
    break;
    
    case 'H':
    s=s+"B";
    break;
    
    case 'E':
    s=s+"C";
    break;
    
    case 'Q':
    s=s+"D";
    break;
    
    case 'U':
    s=s+"E";
    break;
    
    case 'I':
    s=s+"F";
    break;
    
    case 'C':
    s=s+"G";
    break;
    
    case 'K':
    s=s+"H";
    break;
    
    case 'B':
    s=s+"I";
    break;
    
    case 'R':
    s=s+"J";
    break;
    
    case 'O':
    s=s+"K";
    break;
    
    case 'W':
    s=s+"L";
    break;
    
    case 'N':
    s=s+"M";
    break;
    
    case 'F':
    s=s+"N";
    break;
    
    case 'X':
    s=s+"O";
    break;
    
    case 'J':
    s=s+"P";
    break;
    
    case 'M':
    s=s+"Q";
    break;
    
    case 'P':
    s=s+"R";
    break;
    
    case 'S':
    s=s+"S";
    break;
    
    case 'V':
    s=s+"T";
    break;
    
    case 'L':
    s=s+"U";
    break;
    
    case 'A':
    s=s+"V";
    break;
    
    case 'Z':
    s=s+"W";
    break;
    
    case 'Y':
    s=s+"X";
    break;
    
    case 'D':
    s=s+"Y";
    break;
    
    case 'G':
    s=s+"Z";
    break;
    
    case '7':
    s=s+"0";
    break;
    
    case '3':
    s=s+"1";
    break;
    
    case '6':
    s=s+"2";
    break;
    
    case '8':
    s=s+"3";
    break;
    
    case '9':
    s=s+"4";
    break;
    
    case '0':
    s=s+"5";
    break;
    
    case '2':
    s=s+"6";
    break;
    
    case '4':
    s=s+"7";
    break;
    
    case '1':
    s=s+"8";
    break;
    
    case '5':
    s=s+"9";
    break;
    
    default:
    s=s+z;
    }
    a++;
    }
    jTextArea1.setText(s);
            }
            
        }
        if(code/10==0)
        {jTextArea2.setText("");
         jButton1.setVisible(false);
         jButton2.setVisible(true);
         jButton2.requestFocus();}
        else
        {jTextArea2.setText(code/10+"");
        jButton1.setVisible(false);}
         
         message="";
         s="";
         code=0;
         a=0;
        }
    }
},0,2000);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        try {Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/SecretMessaging", "root", "manager");
            Statement stmt=con.createStatement();
            String check="select * from secretmessages where AssignedPin='"+pin+"'";
            ResultSet rst = stmt.executeQuery(check);
            rst.last();
            
            jTextArea1.setText(rst.getString("SecretMessage"));
            jTextArea2.setText(rst.getString("CodesApplied"));
            
            con.close();
        } catch (Exception e) {JOptionPane.showMessageDialog(this, e.getMessage());
        }

jButton1.requestFocus();
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
DecodeResult.message=jTextArea1.getText();
DecodeResult.pin=pin;
new DecodeResult().setVisible(true);
this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Decode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Decode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Decode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Decode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}

